<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Devel!]]></title>
  <link href="http://choonkeat.github.com/choonkeat/atom.xml" rel="self"/>
  <link href="http://choonkeat.github.com/choonkeat/"/>
  <updated>2016-12-29T23:39:17+08:00</updated>
  <id>http://choonkeat.github.com/choonkeat/</id>
  <author>
    <name><![CDATA[choonkeat]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[File Uploads 2015]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2015/10/file-uploads-2015.html"/>
    <updated>2015-10-29T11:17:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2015/10/file-uploads-2015</id>
    <content type="html"><![CDATA[<p>Another day, another monolith Ruby gem to reach deep into the bowels of your app config, models, views, controllers and make you manage uploading of file, storage of files, processing of files together with the rest of your business logic, only with the promise of loads and loads of syntax-sugar and enough config option to hang yourself with.</p>

<p>paperclip, carrierwave, dragonfly, refile, shrine&#8230;</p>

<p>The libraries may have high code quality, full coverage specs, flexible, comprehensive, easy, but it is bad architecture. I’ve covered most of them in <a href="http://www.slideshare.net/choonkeat/file-upload-2015">this presentation</a> and won’t repeat them here.</p>

<p>While the Ruby community wasn&#8217;t looking, the rest of the world has moved on to having standalone servers to manage &amp; process their file uploads. Latest example: <a href="https://medium.com/medium-eng/the-stack-that-helped-medium-drive-2-6-millennia-of-reading-time-e56801f7c492?source=tw-f29a01c49588-1446087364731#e425--share-0-487">medium.com</a></p>

<p>When you adopt a server-client pattern (as oppose to syntax-sugar-into-my-monolith-rails-app pattern) you&#8217;ll discover can optimize, manage, scale independently, extend and improve using standard protocols; a whole new world of possibilities.</p>

<p>What? This <a href="https://github.com/choonkeat/attache">rack+imagemagick server</a> not working out for you? Swap in your own clustered-faster-attache.go server and your Rails app chugs along oblivious to the change.</p>

<p>What? Don’t like <a href="https://github.com/choonkeat/attache_rails">reactjs in the attache client gem</a>? Introduce your own no-framework-js-attache gem and your attache server can remain oblivious to the upgrade.</p>

<p>What? Need to support that spanking new open protocol for resumable upload over unreliable network? Have option for Instagram-like processing? Well then <a href="https://github.com/choonkeat/attache/pull/10">add a middleware</a> to your image server and both your server and Rails app can remain blissfully ignorant.</p>

<p>Architecture.</p>

<p>You already know it. That&#8217;s why the common pattern is to use a database, redis, nginx alongside your Rails app. Instead of just having syntax-sugar inside your Rails app to wrangle with b-trees.</p>

<p>Or maybe this will work better: microservices!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A New Plan for Spam: Turing]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2015/02/a-new-plan-for-spam.html"/>
    <updated>2015-02-18T14:01:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2015/02/a-new-plan-for-spam</id>
    <content type="html"><![CDATA[<p>Background: Spammers don&#8217;t really mind when you delete their spam mails or &#8220;mark as spam&#8221;. Same reason <a href="http://research.microsoft.com/pubs/167713/WhyFromNigeria.pdf">they want to be obviously spam</a>: they only want to spend time communicating with the gullible. If they have to spend time communicating with people who wouldn&#8217;t end up being tricked (aka false positive), it would greatly increase their cost of business.</p>

<p><a href="http://www.paulgraham.com/spam.html">Thomas Bayes</a> has served us well for a few years, now is <a href="http://www.imdb.com/title/tt2084970/">a great time</a> to employ Alan Turing&#8217;s help.</p>

<p>I propose to have an &#8220;F1&#8221; competition of sorts, for companies (or talented individuals) working on AI and NLP. Here&#8217;s the competition challenge:</p>

<p><strong>Hold a conversation with a spammer for as long as possible #TuringTest</strong></p>

<p>The entity that accumulates the longest durations over a period of time, e.g. 1 year, is champion for the year.</p>

<p>To do this, ironically, we need spam. We&#8217;ll need mail clients (e.g. Mail.app, Gmail, Hotmail, Outlook) to rewire &#8220;mark as spam&#8221; to deliver, round robin, spams mails to everyone participating in the <code>#F1forAI</code> competition.</p>

<p>From there, the end points will communicate with the spammer onbehalf of the end user, likely using the same SMTP server to hide scent.</p>

<p>And, that&#8217;s about it really.</p>

<p>Oh, yes we need a global ranking table, like the one Dropbox created for their <a href="https://www.dropbox.com/spacerace">Great Space Race</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Robot Vacuum Cleaner]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2014/09/robot-vacuum-cleaner.html"/>
    <updated>2014-09-04T22:33:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2014/09/robot-vacuum-cleaner</id>
    <content type="html"><![CDATA[<p>Well <a href="https://www.dyson360eye.com">this</a> floated in my facebook feed today and my facebook-bubbled world goes crazy</p>

<blockquote><p>Dyson finally announces a robot vacuum cleaner! - <a href="http://www.theverge.com/2014/9/4/6104855/dyson-finally-announces-a-robot-vacuum-cleaner">theverge</a></p></blockquote>

<p>IMHO, as an ex-iRobot user, and certifiable lazy human being, <em>ahem</em>, no.</p>

<p>The &#8220;problem&#8221; with robot vacuum cleaner (and the problem to solve if you&#8217;re thinking of re-inventing one) is not if your robot can see better, can move faster, suck the floor cleaner, reach further into the corners, cover every inch better, map the house better, etc performance related aspects.</p>

<p>No.</p>

<p>What&#8217;s the advantage of a robot vacuum cleaner vs any other methods of cleaning the floor?</p>

<p>It is cleaner? Nope. It is faster? Nope. Covers more floor area? Nope.</p>

<p>Answer: it doesn&#8217;t require supervision. You schedule it once, it wakes up, it runs around on its own, cleans everywhere, returns to park and recharges itself, repeat. OMFG! It is a cron job! Write it once and I&#8217;m set! For life! I don&#8217;t even remember how many cron jobs I have, but that&#8217;s the point right?</p>

<p>That&#8217;s the robot vacuum cleaner advantage, in theory.</p>

<p>But it isn&#8217;t a cron job, and you&#8217;re not set for life. Instead, for the rest of your life, <strong>you</strong> are set to pick up that robot, after every N times that it has done its rounds, to empty <em>its</em> days-old dirty dust bag/container, clean <em>its</em> now-days-old-dirty brushes and throw those dirty away. If <em>you</em> fail to clean your robot punctually, your dirty robot will be going around the house, like you&#8217;d scheduled it, and dirty your house everywhere, return to park and recharges itself, repeat. HAAA! Take that, yo! Who&#8217;s scheduling who now?</p>

<p>So, no. Save the frenzy for when you see a robot vacuum cleaner that&#8217;ll finally clean itself too.</p>

<p>For now, I&#8217;m filing this under <code>#SolvingTheWrongProblem</code> <code>#HeyOurVersionOfCronRunsYourJobFasterButYouNeedToSuperviseIt</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Better incoming email handling for your webapp]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2014/02/better-incoming-email-handling-for-your-webapp.html"/>
    <updated>2014-02-10T17:35:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2014/02/better-incoming-email-handling-for-your-webapp</id>
    <content type="html"><![CDATA[<p>A standard feature in a webapp is to send emails to an end user. This can be done by</p>

<ul>
<li>using the locally installed <a href="http://www.postfix.org/">mail transfer agent (MTA) like postfix</a> (not available on heroku)</li>
<li>paying a bit of money and using SendGrid</li>
<li><a href="https://github.com/andris9/directmail">sending directly to the recipient smtp server</a> (doesn&#8217;t work well if you are on ec2)</li>
</ul>


<p>What happens when your user replies to that email, using email? You could stonewall with a non-existant <code>donotreply@example.com</code>&#8230; but how about when you <em>do</em> want to handle a reply? Add a link in the email saying <code>click here to reply using our web interface</code>? I find that UX onerous and usually terribly slow e.g. working through my inbox during commute.</p>

<p>A better UX would be to allow an actual email reply.</p>

<h3>Incoming email</h3>

<p>Handling incoming emails might seem like dark waters for web developers. Many solutions offered on stackoverflow &amp; mailing lists usually involves gmail, imap and polling.</p>

<p>Polling. Ugh.</p>

<h3>Event driven incoming email</h3>

<p>A better way is to pipe incoming email directly to your application for processing. And for web developers, &#8220;pipe&#8221; preferably means a <code>HTTP POST</code> into your favourite web framework. aka a Webhook.</p>

<p>A quick overview of such setup is:</p>

<ol>
<li>Point <code>MX</code> dns entry for your domain to the server that can receive email (e.g. ubuntu with postfix installed); this server <em>can</em> be a different server from your webapp</li>
<li>Configure <code>postfix</code> to handle that email with an <a href="https://gist.github.com/choonkeat/3225691">smtp-to-http shell script</a></li>
<li>Now every incoming email is just a regular HTTP form post to your webapp. Throw the blob of email content into a parser like <a href="http://rubygems.org/gems/mail">mail</a> or <a href="https://npmjs.org/package/mailparser">mailparser</a> and you&#8217;d have a handy email object to manipulate.</li>
</ol>


<p>Configuring your own <code>Postfix</code> server and installing that script to work with <code>Postfix</code> might be difficult to some, walk in the park for others, but definitely a hairy piece of infrastructure to keep around. You can make things less hairy by paying a SaaS provider to take care of #1 and #2, but there are caveats.</p>

<h3>Reply-To as Identifier</h3>

<p>Most webapps I see uses a custom <code>Reply-To</code> email address (e.g. Basecamp &amp; Github) In this design, an email notification sent from Discussion <code>id=42</code> would use <code>Reply-To: discussion-42@webapp.com</code>; an email notification for Discussion <code>id=99</code> would use a different <code>Reply-To: discussion-99@webapp.com</code> address.</p>

<p>When a user replies via email, the webhook handler parses <code>To: discussion-42@webapp.com</code> header, retrieves <code>Dicussion.find(42)</code> and create a new discussion comment on behalf of <code>User.where(email: email.from)</code>, using the email html/text body as <code>comment.body</code>.</p>

<p>Unfortunately, unless you pay <a href="www.cloudmailin.com/plans">an arm and a leg</a>, you&#8217;ll only get 1x email address to use as your <code>Reply-To</code>. Also, any attachment in the email would be lost.</p>

<p>So having unique-per-conversation <code>Reply-To</code> address is inefficient &amp; restrictive your infrastructure options.</p>

<h3>Discussion Thread</h3>

<p>One more thing.</p>

<p>Unless you want your webapp&#8217;s email messages to reach your user&#8217;s inbox as individual, annoyingly unrelated messages, your job is actually not done yet.</p>

<p>A conversation in your webapp should ideally be threaded in the same manner in your user&#8217;s inbox (e.g. see Basecamp discussions &amp; Github Issues). So when <code>userX</code> comments on <code>Discussion 42</code>, the outgoing email notification sent to other participants of the discussion should properly set <code>In-Reply-To: &lt;discussion42messageid&gt;</code> and <code>References: &lt;discussion42messageid&gt;</code> in order for them to thread properly in Gmail, Apple Mail and presumably anything else. Having a matching mail subject is essential too, but that&#8217;s the easy part.</p>

<p>By now we&#8217;d have a module to manage mapping of <code>Discussion</code> records to-and-fro <code>Reply-To</code> values. And another module to manage a consistent value of <code>Message-Id</code>, <code>In-Reply-To</code> and <code>References</code> for <code>Discussion</code> records.</p>

<p>Seems unnecessarily complicated.</p>

<h3>Message-Id as Identifier (duh)</h3>

<p>We can simplify the design by giving up unique-per-conversation <code>Reply-To</code>.</p>

<p>Uh? Then how do you know if an email replied <code>To: standard@webapp.com</code> is for <code>Dicussion.find(42)</code>? We look inside the values array of <code>In-Reply-To</code> + <code>References</code> instead.</p>

<p>For example, an outgoing email from your webapp just need to craft the correct, unique-per-conversation <code>Message-Id: &lt;discussion-42@webapp.com&gt;</code>. A email reply to that will automatically contain these headers</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In-Reply-To: &lt;discussion-42@webapp.com&gt;
</span><span class='line'>References: &lt;discussion-42@webapp.com&gt;</span></code></pre></td></tr></table></div></figure>


<p>And our webhook handler can still locate Discussion 42 based on values array of <code>In-Reply-To</code> + <code>References</code>. Thus, managing <code>Message-Id</code> alone will suffice.</p>

<p>Warning: earlier we mentioned using <code>email.from</code> to identify the <code>User</code>, but that&#8217;s not reliable since email <code>From:</code> header can be easily faked. A better mechanism would be to embed the author identity in <code>References</code></p>

<h3>Summary</h3>

<p>A quick summary of this scheme is</p>

<ol>
<li>User#1 create new Discussion#42 with User#2 as participant</li>
<li>App delivers &#8216;new discussion&#8217; email to User#2 with <code>Message-Id: &lt;D42&gt;</code> and <code>References: &lt;D42-U2SECRET&gt;</code></li>
<li>User#2 replies to email, email automatically carries <code>In-Reply-To: &lt;D42&gt;</code> and <code>References: &lt;D42&gt; &lt;D42-U2SECRET&gt;</code></li>
<li>Webhook handler picks up <code>D42</code> to retrieve Discussion#42, and picks up <code>U2SECRET</code> to locate User#2 and proceed to create a comment</li>
<li>App delivers &#8216;new comment&#8217; email to User#1 with <code>References: &lt;D42&gt; &lt;D42-U1SECRET&gt;</code> (notice <code>Message-Id</code> doesn&#8217;t matter from here onwards)</li>
</ol>


<h3>Diymailin</h3>

<p>That could be the end of the story for most people, but for <a href="https://github.com/develsadvocates/runtimeerror.js">various reasons</a> I couldn&#8217;t afford to have an unreasonably low cap on the number of incoming emails, and have attachments stripped.</p>

<p>So for my own setup, I pay $5/month for a <a href="https://www.digitalocean.com/?refcode=8d52e959ad0f">Digital Ocean</a> box to run a <a href="https://github.com/choonkeat/diymailin">diymailin</a> instance. With that I can support the numerous apps that I have using diymailin&#8217;s built in web interface, without mucking around with arcane <code>postfix</code> config.</p>

<h3>Mail2Webhook</h3>

<p>But if you&#8217;re too lazy to setup your own diymailin instance, you can hop on to <a href="https://www.mail2webhook.com/">mail2webhook.com</a> and use my setup instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Connecting Dots]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2013/08/connecting-dots.html"/>
    <updated>2013-08-14T23:51:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2013/08/connecting-dots</id>
    <content type="html"><![CDATA[<p>I was <a href="http://soundgecko.com">listening</a> to <a href="http://highscalability.com/blog/2012/11/5/gone-fishin-building-super-scalable-systems-blade-runner-mee.html">a post from High Scalability</a> today, and it reminded me of this old talk</p>

<blockquote>
  the spread of an epidemic can provide a model for the spread of information throughout a network and &hellip; techniques based on that model can be used to create ultra-scalable software infrastructures that exhibit unparalleled robustness and scalability properties.
  <br/>
  &mdash; <a href="http://itc.conversationsnetwork.org/shows/detail459.html">Werner Vogels, E-Commerce at Interplanetary Scale</a>
</blockquote>


<p>Taken to its logical conclusion, instead of our familiar client-server architectures, &#8220;everybody&#8221; will have to be hosting a piece of the system in order for us to reach where Werner Vogels describe: scale is no longer a problem to tackle but like a virus, the more nodes there are, the more robust the system.</p>

<p>Even if we solve the technical issues, the first big hurdle is actually: how do we convince everyone to run a piece of infrastructure 24x7?</p>

<h3>Go To Market</h3>

<p>At AllThingsD, when asked to comment on a TV product, Steve Jobs implied that the problem is not purely technical; he rightfully pointed out that there was no <a href="http://tech.fortune.cnn.com/2011/12/23/video-steve-jobs-on-tvs-go-to-market-problem/">good go-to-market-strategy</a>. To appreciate how a go-to-market-strategy can make or break a product, let&#8217;s consider the original iPhone: a beautiful jewel in your hands, but a rather lame cell phone (poor battery life, no 3g, no keyboard)</p>

<p>Who knows if the entire vision was already there, but the initial focus was solely on the beautiful device &amp; beautiful interface. While flying lame and humble under the radar of incumbent players, get <em>this pretty device</em> into enough affluent people&#8217;s hands, and while they&#8217;re smitten, require an unlimited data plan (imho, a critical but understated move in 2007).</p>

<p>Later, a reveal: hey Mac developers, a few million rich people is using our phone, running your familiar OS X, has 24x7 internet connection, plays video, mp3, has GPS, has Google Map, real web browser, multi-touch, accelerometer, camera, compass… Wanna sell them some apps? (you <em>have</em> to time-travel back to 2007 to appreciate how impossibly desirable that was)</p>

<p>The proverbial chicken and egg hurdle was deftly leapt over with a feint.</p>

<h3>Interplanetary Scale</h3>

<p>Space Monkey says they are <a href="http://www.kickstarter.com/projects/clintgc/space-monkey-taking-the-cloud-out-of-the-datacente">taking the cloud out of the datacentre</a>, then they talk about the <a href="http://www.spacemonkey.com/">1TB of storage… your photos, videos, documents, and music</a>. You&#8217;d think they&#8217;re building a Dropbox, iCloud or Amazon S3. Perhaps they do really mean just that.</p>

<p>But let&#8217;s assume they don&#8217;t :-)</p>

<h3>Feint</h3>

<p>While Dropbox is a darling right now and &#8220;Cloud&#8221; is buzzword, Space Monkey is quite a desirable consumer device. So use that story and get the device into the hands of a big enough group of geeky people (Kickstarter hurray!)</p>

<p>Later, a reveal: hey developers, we have a big group of rich geeky people hosting our computer servers across the globe, powered up and connected to the internet 24x7, with a TB of storage each… Wanna sell them some apps?</p>

<h3>Botnet App Store</h3>

<p>What if an app running on this &#8220;data center&#8221; cost nothing extra to scale up? Instead of paying for computing resources in East Coast of USA to serve users in Australia, how about if every user &#8220;pay for their fair share&#8221; instead?</p>

<p>Let&#8217;s say users install your app from Space Monkey &#8220;app store&#8221;, onto their own device. Your app runs off that device at home, stores their own content there too. Users can still access your app from Starbucks like a regular SaaS app (Space Monkey &#8220;data centre&#8221; platform takes care of that, no worries)</p>

<p>Nay sayers may immediately say &#8220;that&#8217;s a lame data centre! you can&#8217;t possibly launch a search engine this way!&#8221;. Some types of app won&#8217;t work well (Google.com, Amazon.com), but others could potentially thrive (Shopify, Gmail, Dropbox).</p>

<p>And being lame to incumbent products is not always a bad thing.</p>

<h3>&#8220;If you’re not paying for the product, you are the product&#8221;</h3>

<p>Like an iPhone, the device belongs to the customer, and they&#8217;d have to explicitly install apps from an app store. The result is, developers can easily charge money for the app in a way that agrees with how people pay for things. Thanks Apple AppStore, for training the mass consumers!</p>

<p>A side effect is, since you&#8217;re now selling your app, you no longer need to sell your users: Hey, your product has no ads.</p>

<h3>Epilogue</h3>

<p>There once was a social network idea pitched to me: an anti-Facebook.</p>

<p>With superb privacy configs, access controls so anal that the infrastructure requires each user to store content in their own harddisk (Ha!). No big brother. No subpoena. I told my peers they&#8217;re crazy.</p>

<p>Perhaps they&#8217;d just needed a better go to market strategy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn hacking, not ABCs]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2012/06/learn-hacking-not-abcs.html"/>
    <updated>2012-06-24T22:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2012/06/learn-hacking-not-abcs</id>
    <content type="html"><![CDATA[<p>While looking for a place to start learning programming, my friend Phil brought this to my attention: <a href="http://blogs.wsj.com/tech-europe/2012/06/19/codecademy-closes-10-million-round/">Codecademy Closes $10 Million Round</a>. He asked me what I think of it [as a place for him to start].</p>

<p>While I applaud their existence, and congratulate their funding, I doubt I would&#8217;ve gotten into programming if I were introduced via something like <a href="http://www.codecademy.com/">Codecademy</a>.</p>

<p>I&#8217;m lazy, impatient and have lots of things I&#8217;d rather be doing than whatever I&#8217;m doing right now. And I definitely don&#8217;t want to sit through grammar school, regardless of whether it was English language or the lovely Ruby programming language. I find programming interesting only because gets me results.</p>

<p>Story was, our home PC&#8217;s 40mb hard disk crashed and we were left with whatever that was on floppies. My brother borrowed a book from the library with computer games inside. I would boot up the computer, ran &#8220;gwbasic&#8221;, choose a game from the book, and type all the gibberish code into the computer, character by character. Some games were a few lines long, some spanned a few pages. After everything was typed in, I&#8217;d run and play my game.</p>

<p>I remember especially liking a cowboy fast draw turn-based game that had dice roll based on your character&#8217;s stats (speed, accuracy), distance, dealt damages based on the gun you used and where you hit. It was fun.</p>

<p>Before long I realize I didn&#8217;t have to transcribe every character in the book. If I changed some numbers, the computer wouldn&#8217;t know it came from me, and the game would play out differently. I made the games better (or worse, depending on whether you think god-mode is a good thing or not).</p>

<p>Before long I realize I didn&#8217;t have to transcribe <em>anything</em> from the book. If I&#8217;d just written anything I wanted, the computer wouldn&#8217;t know <em>none</em> of it came from the book. The computer would follow <em>my</em> instructions and run <em>my</em> game like it would run the games from the book.</p>

<p>Wow. I am as authoritative to the computer as The Book.</p>

<p>(The next big milestone would come several years later, when I produced my first &#8220;.exe&#8221; file. aka, shit just got real.)</p>

<p>That&#8217;s why I&#8217;m biased to think that programming should only ever be introduced as a means to get something real done or done faster. Hacking on something you already understand. Then there is a purpose and motivation to learn. Then programming is meaningful. It is sad [to me] to know that some people&#8217;s first contact with programming would be a dry grammar class (or some patronizing guided tour to nowhere, &#8221;<em>yippie, you can count!</em>&#8221;) that they just <em>have</em> to sit through to learn, no biggie, like everything else they&#8217;d done in school.</p>

<p>[Update 27 Sept 2012]</p>

<blockquote><p>This essay was an immune response, triggered by hearing too many times that <a href="https://vimeo.com/36579366">Inventing on Principle</a> was &#8220;about live coding&#8221;, and seeing too many attempts to &#8220;teach programming&#8221; by adorning a JavaScript editor with badges and mascots.</p>

<p>&#8211; &#8220;Learnable Programming&#8221;, <a href="http://worrydream.com/LearnableProgramming/">Bret Victor</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TDD for Those Who Don't Need It]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2012/06/tdd-for-those-who-dont-need-it.html"/>
    <updated>2012-06-01T00:13:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2012/06/tdd-for-those-who-dont-need-it</id>
    <content type="html"><![CDATA[<p>A public service announcement: There&#8217;s still a lot of pretty good programmers who don&#8217;t write tests&#8230; and programmers who write tests are not necessarily any good.</p>

<p>It is easy to forget that. <a href="http://en.wikipedia.org/wiki/Behavior_Driven_Development">BDD</a>/<a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> propaganda can be a thick fog.</p>

<p>A year ago the only &#8220;BDD&#8221; I&#8217;d done was &#8220;Bug Driven&#8221;, i.e. &#8220;Bug in production? Add a test &amp; fix it&#8221;. There were no test culture from where I began writing code and we write code by simply writing the code. New, file, tap tap tap, run; That&#8217;s how we do it, that&#8217;s how we&#8217;ve been doing it, work gets done, everyone is happy.</p>

<p>Nowadays, there&#8217;ll be TDD folks sweeping in to shame you into writing tests. &#8220;Oh, you DON&#8217;T write tests? Then how can you possibly be sure your code is correct?!11 Fwahahahaha.&#8221; &#8220;I did test it myself. It&#8217;s in production and it works.&#8221; Still, you might eventually succumb to such peer pressure and decide to &#8220;write some tests&#8221; in your next project&#8230; only to find it tedious, distracting, cumbersome &amp; standing between you and your deadline. No more tests in the next project.</p>

<p>My issue is, every sell for TDD has to do with some future benefit: Tests give you confidence to refactor [next time]. Writing tests makes your design better [you&#8217;ll be thankful next time]. Tests serves as documentation [for the next developer, or yourself next time]. Untested code is legacy code [when you have to touch it again, next time].</p>

<p>Well, <a href="http://en.wikipedia.org/wiki/You_ain't_gonna_need_it">YAGNI</a> is a good principle too, and it can apply here.</p>

<p><span class="pullquote">Perfectly capable programmers, who don&#8217;t currently write tests, are not actually <em>against</em> having confidence to refactor</span>, <em>against</em> better api design, <em>against</em> having documentation, or <em>against</em> maintainable code. It is pointless trying to convince them the benefits of that. In fact, chances are (believe it or not) they strive for that harder than you might imagine - they probably know their patterns of refactoring, may have solid habits of writing javadoc/rdoc/etc doc, and are likely to leave great commit messages too. They have different [arguably inferior] means at their disposal, that&#8217;s all.</p>

<p>On the other hand, something that&#8217;s not YAGNI, and a very real issue of writing software, is the amount of information you have to hold in your head at the same time. Writing a feature of many moving parts is almost magic, this piece here, that piece there, fits perfectly somehow and everything works. On a good day, the programmer is in The Zone, pieces fit effortlessly. On a bad day, maybe nothing gets done. That&#8217;s why the headphones. That&#8217;s why the night shift, morning shift. <span class="pullquote">And if you&#8217;re not a programmer, that&#8217;s why your programmers bite when you approach their desks</span> - you missed the sound of a thousand and one intricately placed detail crashing down like a house of cards, when you slap their back, &#8220;Hey, how&#8217;s it goin?&#8221;</p>

<p>What eventually got me into writing tests, was a point about TDD that is often buried, not clarified &amp; maybe mentioned in passing. (On hindsight, I realise most TDD materials are meant to convert TDD folks of a different sect, and not really meant to get outsiders <em>into</em> TDD) An example is in <a href="http://railscasts.com/episodes/275-how-i-test">this RailsCast, at the 4m37s mark</a>, Ryan Bates made a throw away comment, <em>&#8220;I really like this approach of testing, it just walks you through: what&#8217;s the next step I have to do to get this working.&#8221;</em>. Though this may seriously not be the most important benefit for most TDD advocates, but as a reason to start adopting TDD&#8230;</p>

<p>That. Was. It.</p>

<p>Writing your test first is like putting a golf flag at the hole.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>it "emails user when requesting password reset" do
</span><span class='line'>  user = Factory(:user)
</span><span class='line'>  visit login_path
</span><span class='line'>  click_link "password"
</span><span class='line'>  fill_in "Email", :with =&gt; user.email
</span><span class='line'>  click_button "Reset Password"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p><span class="pullquote">Now that the flag is planted, the actual work of &#8220;writing the code&#8221; becomes an almost mindless stroll of hitting the ball towards the flag - fixing the next error thrown from the test</span>: <em>&#8220;error: no link with title, id or text &#8216;password&#8217; found&#8221;</em> ok, let&#8217;s add that &#8216;password&#8217; field; <em>&#8220;error: `new_password_reset_path&#8217; undefined&#8221;</em> ok, let&#8217;s add that &#8216;new_password_reset_path&#8217; route; etc until there&#8217;s no more errors. Then you&#8217;ve reached the flag. The feature is done. And chances are, you haven&#8217;t even needed to launch that browser to &#8220;check&#8221;.</p>

<p><em>(If your test code can&#8217;t produce &#8220;reads like english&#8221; code like the above sample, then just write your steps in prose first. You can add test code next to the [then commented out] prose later. The end result is the same, and fwiw I actually do prefer test code to read like code than english-y dsl)</em></p>

<p>This approach addresses the &#8220;house of cards&#8221; issue by helping you persist details quickly, and often, into writing. Interruptions are still annoying of cos, but you can survive them better now: the next error is always clearly in sight, just solve it to move on to the next error. <span class="pullquote">Next boss to kill, in a mindless arcade.</span> In fact, you can leave it &#8220;half done&#8221; and come back tomorrow without missing a beat, or requiring &#8220;boot up time&#8221; (recalling &amp; loading details back into your brain) before you get started.</p>

<p>Certainly this isn&#8217;t a silver bullet for all scenarios, but it&#8217;s been effective enough for me. I&#8217;d found myself ploughing through features steadily despite being drowsy from flu medication or being interrupted by loud wails across the room (I&#8217;m also a stay-home dad to my 4-month old baby).</p>

<p>So, if you&#8217;re a good programmer but not writing tests yet, hopefully this can strike a chord with you and get you started. A word of caution: there is just TOO MUCH testing libs out there, learning about most them is simply a waste of time. Just use the bare minimum &amp; get going.</p>

<p>PS: This is known as the &#8220;red/green/refactor&#8221; mantra, which like a company mission statement, fail to appeal to me in <em>any</em> way. <a href="http://en.wikipedia.org/wiki/Test-driven_development">Wikipedia</a>, &#8221;<em>TDD constantly repeats the steps of adding test cases that fail, passing them, and refactoring. Receiving the expected test results at each stage reinforces the programmer&#8217;s mental model of the code, boosts confidence and increases productivity.</em>&#8221; zzzzz zones out&#8230; um, watever.</p>

<p>[Update 27 Sept 2012]</p>

<blockquote><p>Working in the head doesn&#8217;t scale. The head is a hardware platform that hasn&#8217;t been updated in millions of years. To enable the programmer to achieve increasingly complex feats of creativity, the environment must get the programmer out of her head, by providing an external imagination where the programmer can always be reacting to a work-in-progress.</p>

<p>&#8211; &#8220;Learnable Programming: Create by reacting&#8221;, <a href="http://worrydream.com/LearnableProgramming/">Bret Victor</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nokia Lumia 800]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2012/01/nokia-lumia-800.html"/>
    <updated>2012-01-31T19:16:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2012/01/nokia-lumia-800</id>
    <content type="html"><![CDATA[<p>Finally gotten my hands on the Nokia Lumia 800. It looks gorgeous.</p>

<p><img src="http://choonkeat.github.com/choonkeat/images/lumia800.jpg" alt="Nokia Lumia 800 Black" /></p>

<h3>Touch</h3>

<p>The Metro UI is sleek, and very responsive to touch. In fact, the touch could be described as too sensitive - it often mistaken my &#8220;mousedown&#8221; (if I may call it that) for a &#8220;tap&#8221; (as if I&#8217;d let go). This isn&#8217;t as big a problem in the normal menu navigation; <span class="pullquote">when in the browser I&#8217;ll accidentally trigger zoom in/out surprisingly often.</span> Perhaps it is a MSIE thing.</p>

<p>In any case, it is not laggy.</p>

<p><strong>[6 days in]</strong> The gesture misreads is getting rather irritating. Reading and scrolling a webpage very often trigger the zooms or even unintended click on links YMMV, but I don&#8217;t even think about the worrying about such accidents on iOS; Perhaps they err on the side of less destructive gesture or something smart. Regardless, my experience is that <em>even the original iPhone</em> interprets gestures generations ahead of Lumia 800.</p>

<p><strong>[Update]</strong> <a href="http://www.theverge.com/2012/3/28/2909478/microsoft-building-windows-8-touchscreen-gestures">This informative video of Microsoft explaining how touch hardware needs to &#8220;meet specifications&#8221;</a> actually speaks volumes of the great amount of attention Apple has put in since the <em>first</em> iPhone. The touch experience on the 2007 iPhone is still unsurpassed in 2012, think about that.</p>

<p>(Can&#8217;t shake off the feeling that the video is an irresponsible (we did <em>our</em> part) &amp; pre-emptive disclaimer of &#8220;their hardware is at fault, don&#8217;t blame us&#8221;)</p>

<p>There is also inconsistent treatment of &#8220;mousedown&#8221; style on links. e.g. In Google Mail tile, the links are helpfully highlighted when &#8220;mousedown&#8221; - like on iOS. Whereas in People tile, reading a tweet and clicking on a url is tricky - the whole tweet gets a &#8220;3d mousedown&#8221; treatment (like tapping a wooden plank floating on water) and only when you release then do you find out if you&#8217;ve tapped the link or done nothing useful.</p>

<h3>Readability</h3>

<p><strong>[6 days in]</strong> Metro, a typography-based design, renders itself (home, menu, native apps) very well. I&#8217;ve initially commented to my wife that the fonts look sharp &amp; I didn&#8217;t even miss the &#8220;retina display&#8221; (unlike when I look at older iPhones).</p>

<p>Sadly, the same cannot be said for webpages in the browser - where fonts tend to be smaller. Text look ugly there.</p>

<p><strong>[1 month in]</strong> The Metro layout allocates a lot of space on boasting its own sense of style (which looks gorgeous to demo, e.g. the big screenshot above content only shows after ~40% of the screen, and the right 10% is &#8220;spent&#8221; on revealing the next screen). This might be fine for a desktop or tablet, but starts getting pointless on the small screen after extended usage. A survey of some apps in their app store (e.g. Facebook app), seems like when following Metro look and feel, it is very easy to fall into the trap of only using half the screen for content.</p>

<h3>Web Browsing</h3>

<p><strong>[6 days in]</strong> On Mobile Safari, if the web page doesn&#8217;t render well I&#8217;ll [double-tap] zoom &amp; scroll as I read, or I&#8217;ll tap &#8220;Safari Reader&#8221;, if that still doesn&#8217;t work I&#8217;ll tap my Instapaper bookmarklet &amp; read it later on my Instapaper app. On the Lumia, due to touch gesture issues, the &#8220;zoom &amp; scroll&#8221; route has 50% chance of taking me through an article. If that doesn&#8217;t work, then there&#8217;s no redress: No readability feature, no Instapaper app (unless I pay monthly subscription).</p>

<p><span class="pullquote">The net effect is, I&#8217;ve caught myself dreading to visit a link, go search for something on the web or generally using the browser. This is quite unlike the general sentiment of web browsing on the iOS.</span></p>

<h3>Transitions</h3>

<p>Stark changes to rectangular areas on the screen is often confusing. When tastefully used, subtle animation can help explain to a user <em>where</em> something came from or went (e.g. [dis]appearance of dialog boxes).</p>

<p>In Metro, pages often peek at you from beyond the screen edge, elements at the top/bottom bounces around, and things in the middle often swirl &amp; flip themselves silly, tapping on buttons sometimes give you that a slight vibrating buzz (a poor attempt at tactile feedback).</p>

<p>(Regarding the part where pages peek: unfortunately Metro chose to <em>wrap</em> you around as you swipe toward the page on the right, instead of ending on the &#8220;last page&#8221;. Thus making it lose all the spatial benefit of having a <a href="http://en.wikipedia.org/wiki/File:Wp7_musicvideo.jpg">view port in a big space</a> metaphor)</p>

<p>Though much better than Vista days, I continue to get the feeling that Microsoft interfaces enjoy telling the user, &#8221;<em>Hey, look at ME!</em>&#8221; more than removing distractions from the task at hand or leaving limelight for the user&#8217;s content.</p>

<p>A case in point is the hardware &#8220;search&#8221; button. When you want to search for something on the web, e.g. &#8220;metro ui&#8221;, tap and it will bring up Bing.</p>

<p>The beautiful background photo is sprinkled with tiny animated boxes - if you tap on them, will show you a trivia of some sort. This eye candy obviously speaks well of whoever had put it together, <em>&#8220;Look at our new search page, mum!&#8221;</em>. <span class="pullquote"><strong>However, the task at hand is to search - not marvel at the search page</strong></span>. A better flow would be to bring up the keyboard for the user to immediately type whatever he&#8217;d want to search for before he&#8217;d forgotten it (which is &#8220;metro ui&#8221; in the previous paragraph).</p>

<p><img src="http://choonkeat.github.com/choonkeat/images/bing-default.jpg" alt="Bing" />
<img src="http://choonkeat.github.com/choonkeat/images/bing-after-tapping.jpg" alt="Bing, after tapping on search bar" /></p>

<p>To make it worse, the search button is located below the bottom of the screen, whereas the obvious next step is to tap something at the top of the screen.</p>

<p>What&#8217;s nice though, is their sidestep of Apple&#8217;s rubber band (bounce scrolling) patent. This might have changed, but I recall Android to have a lame, abrupt halt when a scrolling window reaches the end. Metro, however, implements an equally effective [to Apple&#8217;s rubber band] effect by squeezing the height of elements into the edge of the scroll window, like passengers pressing onto each other  (and bouncing back) when the train screeches to a sudden stop.</p>

<h3>Sleep/Wake</h3>

<p>How do you pick up your phone from your desk? Go ahead and try it. Not something I&#8217;m conscious of before this, but I pick it up by the sides. Unfortunately this means I&#8217;ll often accidentally hit the sleep/wake button on the Lumia 800 - that button is smack in the middle on the right side. A reference for iPhone 4 users, the equivalent would be having that button just above your sim card slot. Yea, go figure. What&#8217;s wrong with having the sleep wake button on the top edge? Was that patented as well?</p>

<h3>Hardware Back Button</h3>

<p><strong>[6 days in]</strong> <span class="pullquote">The issue with a hardware back button is the lack of a hardware forward button (when combined with the fact that websites just love redirecting you to their mobile version).</span></p>

<p>For example,</p>

<blockquote><p>Tap on People tile > Read news feed > Tap on tweet > Tap on url in tweet > Loading link > Redirected to mobile version > Page loads</p>

<p>After reading, you tap back to Tweet screen to reply that tweet, but you see Loading link > Redirected to mobile version > Damn, you tap twice but the redirect was faster than you, you&#8217;re still at mobile tweet page, then you tap faster, tap.. You&#8217;ve tapped too many times and you&#8217;re back at news feed screen (or worse: home screen).</p></blockquote>

<p>Without an equivalent forward button, it is onerous to get back to the correct place to reply that tweet (how far did you scroll?). Especially since re-entering some of these screens will refresh and thus change positions of items in lists. At this time, it begins to feel like a chore.</p>

<p><strong>[3 weeks in]</strong> To make things worse, <span class="pullquote">the &#8220;Home button&#8221; on WP7 does not <em>bring you back</em> to the Home screen. Instead, it <em>launches the Home screen</em> app on top of your current app. This is a subtle, but important difference to where you thought the &#8220;Back&#8221; button will bring you.</span></p>

<p>On more than one occasion, tapping the &#8220;Back&#8221; button had unexpectedly brought me <em>past</em> the Home screen and [back] into a screen that I&#8217;d forgotten about, lost for a moment, and not sure what I&#8217;m supposed to do since the screen is totally irrelevant now.</p>

<h3>Flipboard</h3>

<p>I like the &#8220;People&#8221; tile. If you&#8217;re willing to let Microsoft in to your world of Facebook, Twitter &amp; Google, you&#8217;ll basically get a <a href="http://flipboard.com/">Flipboard</a> phone. Their [addressbook] integration extends into the &#8220;Calendar&#8221; and &#8220;Pictures&#8221; tile. Tweeted pictures, Facebook photos shared to you will all show up promptly neatly organized into albums.</p>

<p>I don&#8217;t actually have the urge to download a Twitter or Facebook client for this phone. Yet.</p>

<p>It would&#8217;ve been even better if the randomly chosen background photo (in Pictures app) could get some just-in-time blur / contrast treatment applied (like Path). Currently, the slim, white text can be a tad difficult to read.</p>

<p><strong>[6 days in]</strong> I&#8217;m finding the People tile integration / presentation of Facebook newsfeed (which impressed me earlier) to be shallow - messages spammed by friends playing games appears unfiltered, listing purely by recency isn&#8217;t as interesting as how Facebook interleave activity, uselessly small thumbnails are also tiring to look through. As a result, I&#8217;ve been looking at far less shared videos&#8230; which could be a good thing.</p>

<h3>Camera</h3>

<p>Scenes: auto, backlight, beach, candlelight&#8230; White Balance: auto, incandescent, cloudy&#8230; Exposure Value: -0.5, 0, 0.5, 1.0&#8230; ISO: auto, 100, 200&#8230; Metering Mode: Centre Weighted, Frame Average, Centre Spot&#8230; Effects: Normal, Black &amp; White, Sepia&#8230;</p>

<p><span class="pullquote">Settings that reads like an actual point &amp; shoot camera. I hate it.</span></p>

<p>Also, having <code>Press the screen to take pictures = On</code> as default is sure to trip up migrants from iPhone. But maybe they are only trying to poach adopters from the market size leader.</p>

<h3>Computer</h3>

<p>The phone told me there was software update available, instructing me to &#8220;connect to a computer&#8221;. Obviously, that simplistic instruction wouldn&#8217;t work on my mac. After a bit of googling, I concluded that I need to install &#8220;zune&#8221; on my mac - which brings me to <a href="http://www.microsoft.com/download/en/details.aspx?id=20993">this page</a>.</p>

<p>The download is a <code>.txt</code> file. Inside the file, is the instruction to go to another URL (itunes.apple.com) to download the app. WTF? Instructions inside a text file? Did they steal that awesome user experience from some random bittorrent site? Where&#8217;s my ascii art?</p>

<p>FWIW, Paypal is worse for doing such <a href="http://twitter.com/choonkeat/status/129461166299811840">302 Redirect with a PDF file</a>.</p>

<h3>Copy Paste</h3>

<p><strong>[3 weeks in]</strong> You tap on a word and the copy-paste icon immediate jumps up. Tapping on the icon will prepend the icon into the list of auto-complete words. Now, whenever the keyboard shows up, the [paste] icon is there, ready for you to tap and paste into the text field. <span class="pullquote">I find this reuse of the existing auto-complete mechanism very elegant.</span></p>

<p><img src="http://choonkeat.github.com/choonkeat/images/wp7_copypaste1.jpg" alt="Select" />
<img src="http://choonkeat.github.com/choonkeat/images/wp7_copypaste2.jpg" alt="Copy" /></p>

<p>After pasting once, the icon goes into partial hiding into the left of the screen. Tapping on it will reveal it in full, and tapping it again will paste the content into the text field (and the icon goes into partial hiding again). I find this dance slightly unnecessary, since it doesn&#8217;t save a lot of pixels. Moreover, you can &#8220;throw&#8221; the icon left and it will completely disappear from the autocomplete list and save even more space (only to re-appear when focusing on a new text field)</p>

<p>Also unfortunate, is if you turn off the screen (easily by accident, as mentioned earlier), the clipboard is completely deleted. This is either due to security concerns, or (more likely) due to the need to have a way of free-ing up the autocomplete screen space.</p>

<h3>End</h3>

<p>The OS appeals to me and I attribute all hiccups encountered to the relative youth of the platform. I&#8217;m hoping to use it, at least for the next few weeks, as my full-time phone.</p>

<p><span class="pullquote">But I sure miss Instagram already.</span></p>

<p><strong>[6 days in]</strong> Though I paid for my iOS Instapaper app, I&#8217;m not a paid subscriber for Instapaper, thus no Instapaper app for me; I&#8217;m very much missing the relatively new (and relatively minor) feature on iOS: Safari Reader.</p>

<p><strong>[1 month in]</strong> I&#8217;ve sold it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby for Rails Beginners]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2011/09/ruby-for-rails-beginners.html"/>
    <updated>2011-09-24T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2011/09/ruby-for-rails-beginners</id>
    <content type="html"><![CDATA[<p>I&#39;ve been doing this exercise for a few Rails beginners (or non-rubyists who glanced at Rails a bit before) and the general feedback is that they learn Rails but not Ruby, and this is new to them. So I suppose I should just write it down to save future effort.</p>
<p>If you already know Ruby you&#39;d want to stop reading here.</p>
<h3 style="margin-top: 1.5em;"><strong>&quot;Computer, book me on the cheapest flight to Mexico for tomorrow!&quot;</strong></h3>
<p>The unfortunate thing is, most folks&#39; first contact with Rails will be some short code snippets like</p>
<pre><code>class Comment &lt; ActiveRecord::Base
  belongs_to :user
end

class User &lt; ActiveRecord::Base
  has_many :comments
  validates_uniqueness_of :username, :case_sensitive =&gt; false
end
</code></pre>
<p>Very succinct. Looks like english and could even appear friendly to non-programmers. It doesn&#39;t look &quot;<em>real</em>&quot; and has &quot;<em>toy</em>&quot; written all over it. The jaded programmer will see &quot;<em>config file</em>&quot;, &quot;<em>no real syntax</em>&quot;, &quot;<em>fragile</em>&quot;, &quot;<em>abitrary subset</em>&quot;, &quot;<em>haml</em>&quot; (<em>zing!</em>) or &quot;<em>not powerful</em>&quot; as if a guy in grey suit just demoed how he told his computer what to do verbally - &quot;<em>How sustainable can such fake syntax be?</em>&quot;. And perhaps beginners might go, &quot;<em>Rails lets me write english-ish code! Wow wee!</em>&quot;</p>
<h3 style="margin-top: 1.5em;"><strong>Let&#39;s start somewhere else</strong></h3>
<p>In mainstream OO languages like Java, you can&#39;t really write Java code anywhere you like. &quot;<em>Huh?</em>&quot; Yes, you just don&#39;t usually think about it this way. For example you can&#39;t simply insert Java code anywhere, say&#8230;</p>
<pre><code><span style="color: #ff7f00;">System.out.println(&quot;here?&quot;);</span>
public class Hello {
  public static void main(String [] argv) {
    System.out.println(&quot;world!&quot;);
  }
  <span style="color: #ff7f00;">System.out.println(&quot;or here!&quot;);</span>
}
</code></pre>
<p>It&#39;s not allowed and you&#39;d get errors</p>
<pre><code>$ javac Hello.java 
Hello.java:1: class, interface, or enum expected
System.out.println(&quot;here?&quot;);
^
Hello.java:6: &lt;identifier&gt; expected
  System.out.println(&quot;or here!&quot;);
                    ^
Hello.java:6: illegal start of type
  System.out.println(&quot;or here!&quot;);
                     ^
3 errors
</code></pre>
<p>In Ruby, however,&#0160;you&#0160;<em>can</em>&#0160;write Ruby in weird places:</p>
<pre><code><span style="color: #ff7f00;">puts(&quot;here?&quot;)</span>
class Hello
  def self.main(argv)
    puts(&quot;world!&quot;)
  end
  <span style="color: #ff7f00;">puts(&quot;or here!&quot;)</span>
end
Hello.main(ARGV)
</code></pre>
<p>Which runs like this instead</p>
<pre><code>$ ruby hello.rb 
here?
or here!
world!
</code></pre>
<h3 style="margin-top: 1.5em;"><strong>So? Big deal</strong></h3>
<p>Taking another step back, let&#39;s look at this Ruby class</p>
<pre><code>class Hello
  def an_instance_method()
    puts(&quot;This is inside an_instance_method&quot;)
  end
  def self.a_class_method()
    puts(&quot;This is inside a_class_method&quot;)
  end
end
</code></pre>
<p>If you&#39;re a programmer you&#39;d have ascertained&#0160;<code>def</code>&#0160;defines a method (or function). Now, the difference between&#0160;<code>def an_instance_method()</code>&#0160;and&#0160;<code>def self.a_class_method()</code>&#0160;is that&#0160;<code>a_class_method</code>&#0160;is a class method (or Java programmers like to say &quot;static method&quot;) and is used like this</p>
<pre><code>Hello.a_class_method()
</code></pre>
<p>which prints&#0160;<code>This is inside a_class_method</code>&#0160;whereas&#0160;<code>an_instance_method</code>&#0160;is an instance method that you can call on instances of the&#0160;<code>Hello</code>&#0160;class,</p>
<pre><code>x = Hello.new()
x.an_instance_method()
</code></pre>
<h3 style="margin-top: 1.5em;"><strong>So? Big deal</strong></h3>
<p>Say we define our Ruby class like this, with a&#0160;<code>puts</code>&#0160;statement at the bottom</p>
<pre><code>class Hello
  def an_instance_method()
    puts(&quot;This is inside an_instance_method&quot;)
  end
  def self.a_class_method()
    puts(&quot;This is inside a_class_method&quot;)
  end
  <span style="color: #ff7f00;">puts(self)</span>
end
</code></pre>
<p>Running it would produce</p>
<pre><code>$ ruby hello.rb 
Hello
</code></pre>
<p>Notice&#0160;<code>puts(self)</code>&#0160;has printed the name of our class&#0160;<code>Hello</code>. <strong>This means we are referring to the Class which we&#39;re still in process of defining!</strong> And since we can refer to it, we can also use it (as much of it as we&#39;ve defined so far)</p>
<pre><code>class Hello
  <span style="color: #ff7f00;">x = self.new()
  puts(x)</span>

  def an_instance_method()
    puts(&quot;This is inside an_instance_method&quot;)
  end
  <span style="color: #ff7f00;">x.an_instance_method()</span>

  def self.a_class_method()
    puts(&quot;This is inside a_class_method&quot;)
  end
  <span style="color: #ff7f00;">self.a_class_method()</span>
end
</code></pre>
<p>Running it would produce</p>
<pre><code>$ ruby hello.rb 
#&lt;Hello:0x0000010084f778&gt;
This is inside an_instance_method
This is inside a_class_method
</code></pre>
<p>Notice how instance&#0160;<code>x</code>&#0160;obtains an instance method after the fact! Let&#39;s clean up our class: rename it as&#0160;<code>User</code>, and rename the class method to&#0160;<code>validates_uniqueness_of</code>, and add some arguments to the class method&#8230;</p>
<pre><code>class User
  def self.validates_uniqueness_of(what, options)
    puts(&quot;This is inside validates_uniqueness_of #{what} and #{options}&quot;)
  end
  <span style="color: #ff7f00;">self.validates_uniqueness_of(&#39;username&#39;, Hash[&#39;case_sensitive&#39;,false])</span>
end
</code></pre>
<p>The&#0160;<code>#{blah}</code>&#0160;syntax is string interpolation, allowing Ruby code to run within a string, like&#0160;<code>&quot;Five plus One is equal to #{5 + 1}&quot;</code>. So, running this file would produce</p>
<pre><code>$ ruby hello.rb
This is inside validates_uniqueness_of username and {&quot;case_sensitive&quot;=&gt;false}
</code></pre>
<p>In Ruby, Hash objects (or associative arrays) can be defined literally as&#0160;<code>{&#39;case_sensitive&#39;=&gt;false}</code>; (brackets) and {curly braces} are largely optional;&#0160;<code>self</code>&#0160;is implied; You can also use&#0160;<code>:symbols</code>&#0160;to denote things you&#39;d usually use enums or constants for</p>
<pre><code>class User
  <span style="color: #ff7f00;">def self.validates_uniqueness_of(what, options)</span>
    puts &quot;This is inside validates_uniqueness_of #{what} and #{options}&quot;
  end
  <span style="color: #ff7f00;">validates_uniqueness_of :username, :case_sensitive =&gt; false</span>
end
</code></pre>
<p>We can use the&#0160;<code>&lt;</code>&#0160;syntax to denote inheritance and define the class method elsewhere</p>
<pre><code><span style="color: #ff7f00;">class Base</span>
  def self.validates_uniqueness_of(what, options)
    puts &quot;This is inside validates_uniqueness_of #{what} and #{options}&quot;
  end
<span style="color: #ff7f00;">end

class User &lt; Base</span>
  validates_uniqueness_of :username, :case_sensitive =&gt; false
end
</code></pre>
<p>We could stash more methods into our&#0160;<code>Base</code>&#0160;class</p>
<pre><code>class Base
  <span style="color: #ff7f00;">def self.has_many(what)
    # some code
  end</span>
  def self.validates_uniqueness_of(what, options)
    # some code
  end
end
</code></pre>
<p>Or we could use&#0160;<code>Mixins</code>&#0160;to organize them neatly into standalone modules and compose them together</p>
<pre><code><span style="color: #ff7f00;">module Relation</span>
  def has_many(what)
    # some code
  end
<span style="color: #ff7f00;">end

module Validation</span>
  def validates_uniqueness_of(what, options)
    # some code
  end
end

class Base
  <span style="color: #ff7f00;">extend Relation
  extend Validation</span>
end
</code></pre>
<p>Either way, we can now have something that looks familiar</p>
<pre><code>class User &lt; Base
  has_many :comments
  validates_uniqueness_of :username, :case_sensitive =&gt; false
end
</code></pre>
<p>So you see, the toy looking code is not Rails-specific, nor is it some limited-capacity syntax for PPT &amp; luring beginners.</p>
<h3 style="margin-top: 1.5em;"><strong>Came for Rails? Stay for Ruby</strong></h3>
<p>And that&#39;s it. If this has piqued your interest, you might want to investigate how Ruby lets Rails get away with the syntax of&#0160;<code>config/routes.rb</code>&#0160;and how Ruby makes&#0160;<code>has_many</code>&#0160;and&#0160;<code>validates_uniqueness_of</code>&#0160;possible to implement.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Giving Feedback On A Design You Are Paying For]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2010/12/giving-feedback-on-a-design-you-are-paying-for.html"/>
    <updated>2010-12-17T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2010/12/giving-feedback-on-a-design-you-are-paying-for</id>
    <content type="html"><![CDATA[<p><em>Disclaimer: I&#8217;m not knowledgeable in this area, but am interested to know what&#8217;s up. Please feel free to correct my misconceptions.</em></p>

<blockquote>
	&#8220;Make this blue&#8221;, &#8220;Too big&#8221;, &#8220;Bigger&#8221;, &#8220;Darker&#8221;, &#8220;Too narrow&#8221;, &#8220;Put the logo here&#8221;
</blockquote>

<p>I find it hard to comprehend why anyone paying good money for design, would review in this manner. Over and over, round after round. Sounds more like a person trying to work Photoshop with voice control. Shouldn&#8217;t we let the skilled worry about their craft? If your designer doesn&#8217;t know design better than you, why there is a business relationship?</p>

<p>On the back of such encounters (as an onlooker), I had concluded [mistakenly] that having multiple rounds of design reviews was just masturbatory and that a customer should only focus to communicate the whys clearly and leave designers to do their job.</p>

<p>Yesterday, 37signals posted <a href="http://www.google.com/search?q=behind+the+scenes+site:37signals.com">another</a> &#8220;Behind the scenes&#8221; <a href="http://37signals.com/svn/posts/2705-behind-the-scenes-37signalscom-redesign">article on their blog</a>. As I was reading their recap of multiple iterations and feedback, it occurred to me that my conclusion was misdirected. There&#8217;s nothing wrong with the fact that there were multiple rounds of review. My issue was with the nature of the critiques.</p>

<p>The <a href="http://37signals.com/svn/posts/2705-behind-the-scenes-37signalscom-redesign">feedback for each round</a> were about story, intent, clarity. Not pixel pushing. Seems to me, <em>that</em> is how a money paying customer should be reviewing to get his money&#8217;s worth.<br />
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Loremipsumizer]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2010/09/loremipsumizer.html"/>
    <updated>2010-09-18T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2010/09/loremipsumizer</id>
    <content type="html"><![CDATA[<p>I had the need to show some folks example screens of webapps I&#8217;m working on recently. Using those screenshots, the other party could have a better feel of things, we could have a clearer discussion. But the irritation [for me] is always the setup</p>

<p><ol>
<li>The app I&#8217;m working on is still in flux, i.e. design &amp; data attributes will likely change, often</li>
<li>The content I have is often imported from real data sources, and hence is somewhat private &amp; sensitive</li>
<li>I&#8217;m too lazy to think up fake names, fake scenarios, fake photos to fill my database, just so I could have a fragile, demo screenshot (I&#8217;d need to redo / update later)</li>
</ol>
<p>What I&#8217;d <em>really</em> like is</p>

<p><ol>
<li>To be able to use my current webapp, as-is</li>
<li>To be able to use my current data, as-is</li>
<li>To protect private &amp; sensitive data</li>
</ol>
<p>Smells like a bookmarklet? So here it is&nbsp;<a href="http://gist.github.com/585708">Loremipsumizer.js</a>. After installing it, I can anonymize any webpage instantly (then take a screenshot, annotate or print &amp; discuss with somebody else, without worrying about the sensitivity of content)</p>

<p><a href="javascript:(function(u){ c=document;b=c.body;s=c.createElement('script');s.src=u+'?r='+(new Date()).getTime();b.appendChild(s);})('https://raw.github.com/gist/585708/925d9d98ab459feacf3d17568d2d1499157f4970/loremipsumizer.js');void(0);">Click here</a> to try it on this webpage!</p>

<p>The Loremipsumizer will anonymize all text, scramble all numbers, replace images, flash embeds (&amp; video tags?) with wireframe-ish cross-boxes (via data uri). Unfortunately I didn&#8217;t have an elegant solution to anonymize background images (css sprinting, image size, etc) so I&#8217;ll need suggestions there.</p>

<p>In any case, here are a few screenshots of webpages I&#8217;ve anonymized. No prizes for guessing which websites:</p>

<p><object width="400" height="300"> <param name="flashvars" value="offsite=true&lang=en-us&page_show_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624856834061%2Fshow%2F&page_show_back_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624856834061%2F&set_id=72157624856834061&jump_to="></param> <param name="movie" value="http://www.flickr.com/apps/slideshow/show.swf?v=71649"></param> <param name="allowFullScreen" value="true"></param><embed type="application/x-shockwave-flash" src="http://www.flickr.com/apps/slideshow/show.swf?v=71649" allowFullScreen="true" flashvars="offsite=true&lang=en-us&page_show_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624856834061%2Fshow%2F&page_show_back_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624856834061%2F&set_id=72157624856834061&jump_to=" width="400" height="300"></embed></object></p>

<p>Note: Loremipsumizer does not require any JS library, and have not been tested on irritating browsers. Patches are welcome.</p>


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FOAF Rewards]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2010/08/foaf-rewards.html"/>
    <updated>2010-08-29T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2010/08/foaf-rewards</id>
    <content type="html"><![CDATA[<p></p><p><a href="http://www.imdb.com/title/tt1285309/">The Joneses</a> is an interesting idea: if you push product placements all the way <a href="http://en.wikipedia.org/wiki/Up_to_eleven">to 11</a>, you&#39;d have it done in real life. But how do you attribute a [growth in] sale of product P, to the &quot;Joneses&quot; team member? Target market of product P + geography of the sale? And what if the network effects is far reaching and has no geographical boundary (i.e. internet)? So, no two &quot;Joneses&quot; teams should pimp the same product? No good.</p><p>What if we try something more pre-emptive, using something more direct - <a href="http://en.wikipedia.org/wiki/FOAF_(software)">FOAF</a>. So when customer Charlie buys Product P, your CRM picks up that amongst other customers who bought P, customer Betty is in Charlie&#39;s FOAF network&#0160;(Facebook, Twitter, email, blog, flickr, etc).</p><p>With this knowledge, you could directly credit Betty a referral reward and hope to gain an army of MLM team. But this risks displacing Betty&#39;s original reason of buying your product with a weaker, extrinsic motivation.</p><p>Alternatively, you could credit Betty with a discount on her next purchase. This approach is good and already exist informally. But it is also unsurprisingly inefficient in its current state: the connection happens if you manage to make the sales assistant remember you and they bother to inquire about referrals when serving a new customer.</p><p>Wouldn&#39;t it be great if a hypothetical &quot;<em>iCashRegister (now with FOAF)</em>&quot; exist to make this more efficient?</p><p>To cap the potential&#0160;hemorrhage&#0160;of &quot;discount credits&quot; on heavily connected customers, if there are several customers connected to this new customer, they&#39;d only each get a slice of the credits. Also,&#0160;for some business, it might make sense to attribute a referral based on the transaction of the same product. For other businesses, it might make sense to attribute a referral based on purchase recency.</p><p>So now any customer connected to a subsequent customer gets discount credits. And&#0160;all this can happen regardless of whether&#0160;(you)&#0160;the business owner is servicing the customer, or if it was just your part-time sales assistant in the shop.</p><p>To hell with wimpy loyalty cards.&#0160;Why isn&#39;t your business using &quot;<em>iCashRegister (now with FOAF)</em>&quot;?</p><p><em>Update: Do check out </em><a href="http://anafore.com/"><em>Anafore</em></a><em> if you&#39;re interested in this topic!</em></p><p></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yet another $5 iPad stand - this one is for the Brits]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2010/07/yet-another-5-ipad-stand-this-one-is-for-the-brits.html"/>
    <updated>2010-07-18T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2010/07/yet-another-5-ipad-stand-this-one-is-for-the-brits</id>
    <content type="html"><![CDATA[<p>Finally, our bulky <a href="http://en.wikipedia.org/wiki/BS_1363">British Standard power socket design</a> is useful for something.</p>

<p><object height="300" width="400"> <param name="flashvars" value="offsite=true&amp;lang=en-us&amp;page_show_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624401037599%2Fshow%2F&amp;page_show_back_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624401037599%2F&amp;set_id=72157624401037599&amp;jump_to=" /> <param name="movie" value="http://www.flickr.com/apps/slideshow/show.swf?v=71649" /> <param name="allowFullScreen" value="true" /><embed allowfullscreen="true" flashvars="offsite=true&amp;lang=en-us&amp;page_show_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624401037599%2Fshow%2F&amp;page_show_back_url=%2Fphotos%2Fchoonkeat%2Fsets%2F72157624401037599%2F&amp;set_id=72157624401037599&amp;jump_to=" height="300" src="http://www.flickr.com/apps/slideshow/show.swf?v=71649" type="application/x-shockwave-flash" width="400" /></object></p>

<p>Only $5.50 - but you&#39;ll probably already have one in your house.&#0160;No warranty. <a href="http://rsspaperapp.com/">RssPaper</a> app sold separately.</p><p></p><p></p>

<p></p>

<p></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You&#39;re Doing It Wrong - ACM Queue]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2010/06/youre-doing-it-wrong-acm-queue.html"/>
    <updated>2010-06-17T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2010/06/youre-doing-it-wrong-acm-queue</id>
    <content type="html"><![CDATA[<div class='sharedcopy_widget' id='shcp_214b2ff5caae7b2b171d7d533c69c170' > <blockquote class='cited'  cite='http://r7.sharedcopy.com/119cnvb'  style='cursor: pointer; margin-left: 0; padding: 0 0 1em 1em; border: 1px #FFFFFF solid; border-left: 1em #EEEEEE solid; background: #ffffff; '>  <span class="content comments_count_2 withoutphoto" ><span class="text" ><blockquote style="text-align: justify; font-style: italic; border: 0px; background: transparent url(http://sharedcopy.com/images/icons/start_quote.gif) no-repeat scroll left top; padding-left: 20px; color: #555555;  font-style: italic; line-height: 1.2; margin-left: 0px;" class="comment_body comment_body1" >What good is an O(log2(n)) algorithm if those operations cause page faults and slow disk operations? For most relevant datasets an O(n) or even an O(n^2) algorithm, which avoids page faults, will run circles around it.<a href="http://r7.sharedcopy.com/119cnvb#shcp0" > </a ></blockquote> <blockquote style="text-align: justify; font-style: italic; border: 0px; background: transparent url(http://sharedcopy.com/images/icons/start_quote.gif) no-repeat scroll left top; padding-left: 20px; color: #555555;  font-style: italic; line-height: 1.2; margin-left: 0px;" class="comment_body comment_body2" >the results coming out of the CS department would be so much more interesting and useful if they applied to real computers and not just toys<a href="http://r7.sharedcopy.com/119cnvb#shcp1" > </a ></blockquote> </span ></span>  - <a href='http://sharedcopy.com'>Web annotation</a> on <a href='http://r7.sharedcopy.com/119cnvb'>You&#8217;re Doing It Wrong - ACM Queue</a><br /> </blockquote> </div> <script>   var json_214b2ff5caae7b2b171d7d533c69c170 = {    host: 'sharedcopy.com',    width: '480px',    height: '250px',    bgcolor: '#ffffff',    background: '#ffffff url(http://queue.acm.org.sharedcopy.com/images/loading.gif) no-repeat center center; ',    allow_click: true,    src: "http://queue.acm.org.sharedcopy.com/embeds/copy/choonkeat/214b2ff5caae7b2b171d7d533c69c170/480.250/ffffff.ffffff.cc0500/true/shcp0.html"  }; </script> <script src='http://sharedcopy.com/static/embed/script.js'></script> 

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Since @replies can come from anybody]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2009/05/since-replies-can-come-from-anybody.html"/>
    <updated>2009-05-05T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2009/05/since-replies-can-come-from-anybody</id>
    <content type="html"><![CDATA[<p>Someone, let&#39;s say Yahoo, could roll out their own twitter-like service (let&#39;s call it yatter). And all yahoo mail users &quot;become&quot; yatter users automatically, like how they became Openid accounts.</p><ol>
<li>when a yatter user &quot;<span style="color: #7f007f; font-family: Trebuchet MS;">joe</span>&quot; yatts, &quot;<span style="color: #7f007f; font-family: Trebuchet MS;">@twitter/charlie what are you doing?</span>&quot;</li>
<li>yatter&#39;s twitter bot called &quot;<span style="background-color: #00ffff; font-family: Trebuchet MS;">yatter</span>&quot; relays the tweet, &quot;<span style="color: #111111; background-color: #00ffff; font-family: Trebuchet MS;">yatter/joe: @charlie what are you doing?</span>&quot;</li>
<li>twitter user &quot;<span style="background-color: #00ffff; font-family: Trebuchet MS;">charlie</span>&quot; sees the message in his @replies stream, and can respond, &quot;<span style="background-color: #00ffff; font-family: Trebuchet MS;">@yatter/joe hitting my refresh button again and again</span>&quot;</li>
<li>a yatter.com bot called &quot;<span style="color: #7f007f; font-family: Trebuchet MS;">twitter</span>&quot; relays the message, &quot;<span style="color: #7f007f; font-family: Trebuchet MS;">twitter/charlie: @joe hitting my refresh button again and again</span>&quot;</li>
<li>yatter user &quot;<span style="color: #7f007f; font-family: Trebuchet MS;">joe</span>&quot; sees that in his @replies stream in yatter.com.. (repeat from the top)</li>
</ol>
<p>I&#39;d guess it makes sense for yatter apis to be fully compatible with twitter.com, in the ma.gnolia.com vs del.icio.us kind of way. So twitter clients just need to add a new config, &quot;hostname&quot;, and we&#39;re done.</p><p>I think yatter.com could technically allow @yatter/joe to follow
@twitter/charlie. The question is, would twitter.com allow their @charlie user to
follow @yatter/joe?</p><p>Yatter could use the age-old hotmail trick and append the latest status message of the mail sender to the email footer. That should pique interests of recipients. Besides, &quot;a signature&quot; is an existing, understood concept that users can easily see why they&#39;d would want to update their &quot;yatter status&quot;..</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An iPhone optimized web page]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2009/04/an-iphone-optimized-web-page.html"/>
    <updated>2009-04-27T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2009/04/an-iphone-optimized-web-page</id>
    <content type="html"><![CDATA[<p><em><strong>[UPDATE: Proof of concept no more, </strong></em><a href="http://rsspaperapp.com/?blog"><em><strong>RssPaper is now in the store</strong></em></a><em><strong>!]</strong></em></p><p>The defacto way of making a web page &quot;optimized for iPhone&quot; is to slap on <a href="http://code.google.com/p/iui/">iUI</a> (or variants) to simulate the look &amp; feel of a native app (i.e. the UITableView). You can click on an item in the list, and the page slides sideways to reveal another list, or more details&#8230; etc.</p><p>However, the starting point of trying to mimic meant we&#39;re aiming for the web site&#39;s experience is to be <em>worse-or-almost-as-good</em> compared to if it was a native app. e.g. <a href="http://m.cnn.com/">m.cnn.com</a> Can aim to be different instead?</p><p>In trying to mimic a native app, the iUI approach locks down the browser&#39;s width &amp; scaling capability. I actually liked that part of browsing on the iPhone &#8211; its automatic zoom! To zoom-in, you simply <a href="http://www.youtube.com/watch?v=3n0vt6TvEho#t=33s">double-tap on an area of the page</a>. To zoom out, double-tap again. (<em>There&#39;s pinching, but it is manual &amp; I don&#39;t like tedious things</em>)</p><p>Unfortunately, most layouts don&#39;t make it easy for iPhone to automatically zoom-in. The kicker is, a good &amp; fluid CSS layout actually hinders! e.g. the text is still small after double-tapping on <a href="http://jnd.org/">jnd.org</a></p><p>Turns out, the automatic zoom is controlled [only] by the width of the page segment.. meaning, the page&#39;s font size can be infinitesimally small &#8211; it doesn&#39;t matter. As long as the containing width is also small (e.g. contains 5 words across 1 row), the user can still comfortably zoom in and get big text with sharp font of 5 words across the entire screen width!</p><p>Taking this to an extreme, we could have all our site&#39;s content render in tiny little font inside narrow columns on 1 single page and the iPhone visitor can still effortlessly zoom in and read everything! No click, ajax, network lag, read content, back, click another, .. etc.. i.e. instead of content hierarchy behind deep navigation, we could have it based on font sizes.</p><p>Sounds like a newspaper huh?</p><p>To try this out, I&#39;d hacked up <a href="http://rsspaper.choonkeat.com/">this proof-of-concept</a> a few days ago, and have been using it to read my RSS feeds on my bus rides the past few days. While the app itself is <em>not there yet</em>, the zoom interface experiment has really been working out very well! </p>

<p><a href="http://www.flickr.com/photos/choonkeat/3478796556/" title="screenshots by choonkeat, on Flickr"><img alt="screenshots" border="0" height="173" src="http://farm4.static.flickr.com/3574/3478796556_fa30dc29e9_m.jpg" width="240" /></a>

</p><p>Have an iPhone/iPod touch? Try it and lemme know?</p><p>PS: A more extreme sell for a zoom-based UI is Microsoft&#39;s famous <a href="http://www.ted.com/index.php/talks/blaise_aguera_y_arcas_demos_photosynth.html">Seadragon</a> demo.<br />PS: this whole experiment was sparked off when I tried to read the beautiful <a href="http://hacker-newspaper.gilesb.com/">hacker-newspaper.gilesb.com</a> on my iPhone.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[9.99 Reasons to Love IE6]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2009/03/999-reasons-to-love-ie6.html"/>
    <updated>2009-03-28T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2009/03/999-reasons-to-love-ie6</id>
    <content type="html"><![CDATA[<p>A friend showed me this website today: <a href="http://www.bringdownie6.com/">http://www.bringdownie6.com/</a> &quot;<em>Bring down!</em>&quot; Such angry words. There&#39;s so much negativity on the Internet <a href="http://www.google.com/search?q=say+no+ie6">regarding a browser</a>.</p><p>Instead of 1) getting good folks to put feeble badges on websites, or 2) resigning to fate &amp; cursing whenever you have to fire-up IE6 and <em>check</em>, or 3) <a href="http://litmusapp.com/alkaline/">getting bigger, better tools</a> to do stupid things faster&#8230; Maybe we can be more constructive.</p><p>Here&#39;s an idea:</p><p>Dear Developers &amp; Designers,</p><p>Save your sanity: At $0.00 cost to you, we make your website work in IE6!</p><div style="margin-left: 40px;"><strong>Step 1.</strong> Register your website with us<br /><strong>Step 2.</strong> Just copy-paste this into your website&#39;s &lt;head&gt; section: <span style="background-color: #b9b9b9; font-family: Trebuchet MS;">&lt;script src=&quot;http://weloveinternetexplorer.com/bff.js&quot;&gt;&lt;/script&gt;</span><br /><strong>Step 3.</strong> <em>*chuckle*</em> There&#39;s no Step 3!<br /></div><p></p><p>How this&#39;ll work is that, all your IE6 site visitors will be gently redirected to our payment page, explaining nicely:</p><div style="margin-left: 40px;">We&#39;re sorry but Website XYZ no longer works with your old, antique Internet Explorer browser. BUT for just US$9.99/month (<span style="font-style: italic;">1 movie ticket</span><em>!</em>) the hardworking engineers at weloveinternetexplorer.com will fixup the website for YOU, and make this problem go away for you! It&#39;ll just take 30 seconds! We accept all major credit cards &amp; Paypal (maybe even <span style="text-decoration: line-through;">淘宝!</span> <a href="https://www.alipay.com/">Alipay</a> (correction by @xtinegoh) )<br /><br />But you choose not to :-( you may install any of these free, modern browsers and use Website XYZ through them: [firefox logo] [safari logo] [google chrome logo]<br /><br />&#8211;<br />WeLoveInternetExplorer.com Team<br /></div><p></p><p>If the IE6 compatibility work has not been complete yet, the above pay-wall will not be shown. Instead, we&#39;d display a cool 1990s construction worker icon that these folks will be extremely familiar with!</p><p><a href="http://blog.choonkeat.com/.a/6a00e398212d6f883301156f761a73970b-pi" style="display: inline;"><img alt="Construct2_e0" border="0" class="at-xid-6a00e398212d6f883301156f761a73970b " src="http://choonkeat.github.com/choonkeat/images/old/underconstruction.gif" title="Construct2_e0" /></a>
 </p><p>All paid users can of course transparently continue to use the web site (and all other websites that uses this service).</p><p><em>PS: Designers &amp; developers that would like to do Internet Explorer compatibility work (yes, all 3 of you out there, 尤其是中国的同胞朋友, Hội lập trình viên Việt Nam, and сотрудник российских программистов !!!!) Please <a href="http://blog.choonkeat.com/weblog/chew-choon-keat.html">contact me</a></em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why pick a different domain name for asset_host - and not just subdomains]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2009/03/why-pick-a-different-domain-name-for-asset-host-and-not-just-subdomains.html"/>
    <updated>2009-03-23T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2009/03/why-pick-a-different-domain-name-for-asset-host-and-not-just-subdomains</id>
    <content type="html"><![CDATA[<p>Some sites, e.g. <a href="http://github.com">Github.com</a>, uses subdomain for images &amp; assets</p>
<p><a href="http://www.flickr.com/photos/choonkeat/3378694378/" title="assets from subdomain by choonkeat, on Flickr"><img alt="assets from subdomain" height="184" src="http://farm4.static.flickr.com/3439/3378694378_c68d6d575d_m.jpg" width="240" /></a>
</p>
<p>Whereas others, e.g. Yahoo.com, uses a different domain name.</p>
<p><a href="http://www.flickr.com/photos/choonkeat/3377876393/" title="assets from different domain by choonkeat, on Flickr"><img alt="assets from different domain" height="177" src="http://farm4.static.flickr.com/3460/3377876393_995f0549e8_m.jpg" width="240" /></a>
</p><p>Because cookie bandwidth does add up.</p><p><em>PS: I spot George Oat&#39;s picture on Flickr frontpage still. I wonders if it is a form of respect or neglect.</em></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to really Post Load Google Ads (while keeping document.write happy &amp; page rendering snappy)]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2009/03/keeping-google-ads-documentwrite-and-browsers-all-happy.html"/>
    <updated>2009-03-19T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2009/03/keeping-google-ads-documentwrite-and-browsers-all-happy</id>
    <content type="html"><![CDATA[<p>So you have a web page and it is getting some hits. One day, you decide you might as well earn some pennies off that traffic and began copy-pasting some Google Ads into it.</p><p>But you know, Google Ads suck. They use <span style="font-family: Courier;">document.write</span>. Yep, the things we were <a href="http://ejohn.org/blog/browser-page-load-performance/">warned against</a>. But that&#39;s not all. Their <span style="font-family: Courier;">document.write</span> actually pulls in more javascript, which in turn say &quot;<em>weeeeell, while we&#39;re at it!</em>&quot; and start to do even more <span style="font-family: Courier;">document.write</span>! (In this aspect, Microsoft ads seem more thoughtful, or it seems from Digg&#39;s homepage).</p><p>Anyways, this chokes the browser &amp; makes them stutter. Your web page now renders to your audience in stops and starts:</p><div style="margin-left: 40px;">some content appear &gt; ads appear (stall) &gt; more content appear &gt; ads appear (stall) &gt; rest of content appear<br /></div><p><br />A necessary evil? There are a few things that will fix to a certain extent: 1) use &quot;script defer&quot; or 2) <a href="http://www.webdeveloper.com/forum/showthread.php?t=195112">hacking document.write</a>. Not ideal in terms of fragility, and subsequent maintenance of ads embed codes.</p><p>Let&#39;s look at the problem again: 1) Google wants you to paste the script where the ad appears, 2) Wherever the script is pasted, the browser will stutter &amp; stall the content that comes after it.</p><p>For #2, maybe the &quot;solution&quot; is to paste the script AFTER all content? But wait &#8211; doesn&#39;t that mean #1 the ads get rendered there &amp; not where I want them? Yes, but only initially.</p><p>Why not reposition these ads to where they&#39;re supposed to be after they are constructed:</p><div style="margin-left: 40px;">all content appear &gt; ads appear (below the fold, stall) &gt; ads appear in position<br /></div><p>Let&#39;s say that works, unfortunately it sound convoluted &amp; a hassle, the site has too many existing ads to migrate &amp; our guy managing the ads doesn&#39;t code, he just copies whatever Google provides &amp; blah blah blah&#8230; </p><p>That&#39;s what the <a href="http://github.com/choonkeat/postload_google_ads">postload_google_ads</a> Rails plugin is for :-) site-wide benefit for minimum fuss (upfront &amp; subsequently)</p><p>To see it in action, see <a href="http://therssemail.com/ads/demo_without_postload_google_ads">this demo</a>. Click on &quot;Before&quot; and &quot;After&quot;. They 2 pages are essentially the same, but only one of them applies an &quot;after_filter&quot;:</p><div style="margin-left: 40px;">The postload_google_ads plugin is an &quot;after_filter&quot; in Rails. This means that after your webapp has done its thing &amp; generated the dynamic HTML, the after_filter transplant the ads&#39; script tag to the bottom of the DOM tree, leaving behind some placeholders. This modified html is then sent back &amp; rendered on the user&#39;s browser. After all your content renders, the ads will construct themselves (document.write all they want). After the ads are done, a little javascript repositions the rendered ads based on the absolute position of their corresponding placeholders.<br /></div><p>Until ads nework catch up to use unobtrusive javascript, I guess I&#39;ll have to settle for this.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git svn rebase - could not detach HEAD (howto fix)]]></title>
    <link href="http://choonkeat.github.com/choonkeat/weblog/2008/11/git-svn-rebase-could-not-detach-head.html"/>
    <updated>2008-11-16T00:00:00+08:00</updated>
    <id>http://choonkeat.github.com/choonkeat/weblog/2008/11/git-svn-rebase-could-not-detach-head</id>
    <content type="html"><![CDATA[<p>Sounds gross but that is the curt message:</p><div style="margin-left: 40px; font-family: Courier;">$ git svn rebase<br />&#8230;<br />First, rewinding head to replay your work on top of it&#8230;<br />could not detach HEAD<br />rebase refs/remotes/trunk: command returned error: 1<br /></div><p><br />Not very helpful, no clue, can&#39;t even buy a vowel. But if you try something else, the error message begin to make the problem more obvious:</p><div style="margin-left: 40px; font-family: Courier;">$ git co refs/remotes/trunk<br />error: Untracked working tree file &#39;public/images/plugout_button.gif&#39; <span style="background-color: #ffff00; font-family: Courier;">would be overwritten by merge</span>.<br /></div><p><br />Well&#8230; then git-svn should&#39;ve said so!</p><div style="margin-left: 40px; font-family: Courier;">$ <span style="background-color: #ffff00; font-family: Courier;">rm</span> public/images/plugout_button.gif <br />$ git svn rebase<br />First, rewinding head to replay your work on top of it&#8230;<br />Applying &#8230;.<br /></div><p><br />So there. This post is so that I commit it to my long term memory, aka Google.</p>

]]></content>
  </entry>
  
</feed>
